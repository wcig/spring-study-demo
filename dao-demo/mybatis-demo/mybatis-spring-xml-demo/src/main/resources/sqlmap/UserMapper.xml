<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wcig.app.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.wcig.app.model.User">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
    </resultMap>

    <sql id="Base_Column_List">
        id, `name`, phone, password, create_time
    </sql>

    <delete id="deleteByPk" parameterType="java.lang.Long">
        DELETE FROM user WHERE id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByMap">
        DELETE FROM user WHERE
        <choose>
            <when test="map != null and map.size() > 0">
                <if test="map.name != null">
                    name = #{map.name,jdbcType=VARCHAR}
                </if>
                <if test="map.phone != null">
                    AND phone = #{map.phone,jdbcType=VARCHAR}
                </if>
                <if test="map.password != null">
                    AND password = #{map.password,jdbcType=VARCHAR}
                </if>
            </when>
            <otherwise>
                1 = 0
            </otherwise>
        </choose>
    </delete>

    <delete id="batchDeleteByPk" parameterType="java.util.List">
        DELETE FROM user WHERE
        <choose>
            <when test="list != null and list.size() > 0">
                id IN
                <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
                    #{id,jdbcType=BIGINT}
                </foreach>
            </when>
            <otherwise>
                1 = 0
            </otherwise>
        </choose>
    </delete>

    <insert id="insert" parameterType="user">
        INSERT INTO user (id, `name`, phone, password, create_time)
        VALUES (#{id,jdbcType=BIGINT},#{name,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR},#{createTime,jdbcType=BIGINT})
    </insert>

    <insert id="insertUseGeneratedKeys" parameterType="com.wcig.app.model.User"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO user (id, `name`, phone, password, create_time)
        VALUES (#{id,jdbcType=BIGINT},#{name,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR},#{createTime,jdbcType=BIGINT})
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO user (id, `name`, phone, password, create_time) VALUES
        <foreach collection="list" item="item" index="index" open="" close="" separator=",">
            (#{item.id,jdbcType=BIGINT},#{item.name,jdbcType=VARCHAR},#{item.phone,jdbcType=VARCHAR},
            #{item.password,jdbcType=VARCHAR},#{item.createTime,jdbcType=BIGINT})
        </foreach>
    </insert>

    <insert id="batchInsertUseGeneratedKeys" parameterType="java.util.List"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO user (id, `name`, phone, password, create_time) VALUES
        <foreach collection="list" item="item" index="index" open="" close="" separator=",">
            (#{item.id,jdbcType=BIGINT},#{item.name,jdbcType=VARCHAR},#{item.phone,jdbcType=VARCHAR},
            #{item.password,jdbcType=VARCHAR},#{item.createTime,jdbcType=BIGINT})
        </foreach>
    </insert>

    <select id="selectByPk" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user WHERE id = #{id}
    </select>

    <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user WHERE `name` = #{name}
    </select>

    <select id="selectByModel" parameterType="com.wcig.app.model.User" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user
        <where>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT}
            </if>
            <if test="name != null">
                AND name = #{name,jdbcType=VARCHAR}
            </if>
            <if test="phone != null">
                AND phone = #{phone,jdbcType=VARCHAR}
            </if>
            <if test="password != null">
                AND password = #{password,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="selectByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user
        <where>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT}
            </if>
            <if test="name != null">
                AND name = #{name,jdbcType=VARCHAR}
            </if>
            <if test="phone != null">
                AND phone = #{phone,jdbcType=VARCHAR}
            </if>
            <if test="password != null">
                AND password = #{password,jdbcType=VARCHAR}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <select id="selectByModelWithPage2" parameterType="com.wcig.app.model.User" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM user
        <where>
            <if test="user.id != null">
                id = #{user.id,jdbcType=BIGINT}
            </if>
            <if test="user.name != null">
                AND name = #{user.name,jdbcType=VARCHAR}
            </if>
            <if test="user.phone != null">
                AND phone = #{user.phone,jdbcType=VARCHAR}
            </if>
            <if test="user.password != null">
                AND password = #{user.password,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <update id="updateByPk" parameterType="com.wcig.app.model.User">
        UPDATE user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updatePasswordById">
        Update user SET `password` = #{password,jdbcType=VARCHAR} WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByMap" parameterType="java.util.Map">
        UPDATE user
        <set>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE name = #{name,jdbcType=VARCHAR}
    </update>

    <update id="updateSelectByMap">
        UPDATE user
        <set>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="condition != null">
            <where>
                <if test="condition.id != null">
                    id = #{condition.id,jdbcType=BIGINT}
                </if>
                <if test="condition.name != null">
                    AND `name` = #{condition.name,jdbcType=VARCHAR}
                </if>
                <if test="condition.phone != null">
                    AND phone = #{condition.phone,jdbcType=VARCHAR}
                </if>
                <if test="condition.password != null">
                    AND password = #{condition.password,jdbcType=VARCHAR}
                </if>
            </where>
        </if>
    </update>
</mapper>